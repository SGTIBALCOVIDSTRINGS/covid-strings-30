doc.type html
script
html
head
utf8
viewport content=width=device-width,initial-scale=one
title covid strings30 second round bracket
<div id=bracket class=bracket></div>
script src=bracket.js
link rel=stylesheet href=css
head
body
bracket-container{}
matchup
solid zero;
padding 
text align center 
filename=covid strings30 second round.js
highest remaining seed=(greatest remaining num value in covid strings list)
lowest remaining seed=(lowest remaining num value in covid strings list)
intermediate seed1=(first middle remaining value in covid strings list)
intermediate seed2=(second middle remaining value in covid strings list)
round =createelement(div);
createround =covid strings30 second round 
round.classlist.add(round);
for(let i = zero; i < teams.length; i += two) {
round.appendchild(creatematchup(teams[i], teams[i + one]));
return round;
bracket.appendchild(createround(teams));
matchup1=(intermediate seed two versus intermediate seed one)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerhtml =div>${team1}</div>${team2}</div>;
return matchup;
matchup2=(lowest remaining seed versus highest remaining seed)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerhtml=div>${team1}</div>${team2}</div>;
return matchup;
java util.scanner
java.util
questions[]questions={
question17
question18
question19
question20
question21
question22
question23
question24
question25
question26
collections.shuffle(arrays.aslist(questions)
advanceteams=slice(currentteams)
result=declarewinner(matchup1)
if intermediate seed1 score>=forty:
console.log(intermediate seed1 advances)
else:
console.log(intermediate seed2 advances)
result=declarewinner(matchup2)
if highest remaining seed score>=forty:
console.log(highest remaining seed advances)
else:
console.log(lowest remaining seed advances)
return filename


